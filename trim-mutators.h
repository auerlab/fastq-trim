
/*
 *  Generated by ./auto-gen-get-set
 *
 *  Mutator macros for setting with no sanity checking.  Use these to
 *  set structure members from functions outside the trim_t
 *  class.  These macros perform no data validation.  Hence, they achieve
 *  maximum performance where data are guaranteed correct by other means.
 *  Use the mutator functions (same name as the macro, but lower case)
 *  for more robust code with a small performance penalty.
 *
 *  These generated macros are not expected to be perfect.  Check and edit
 *  as needed before adding to your code.
 */

/* trim-mutators.c */
int trim_set_infile1(trim_t *trim_ptr, char *new_infile1);
int trim_set_infile1_ae(trim_t *trim_ptr, size_t c, char new_infile1_element);
int trim_set_infile1_cpy(trim_t *trim_ptr, char *new_infile1, size_t array_size);
int trim_set_outfile1(trim_t *trim_ptr, char *new_outfile1);
int trim_set_outfile1_ae(trim_t *trim_ptr, size_t c, char new_outfile1_element);
int trim_set_outfile1_cpy(trim_t *trim_ptr, char *new_outfile1, size_t array_size);
int trim_set_infile2(trim_t *trim_ptr, char *new_infile2);
int trim_set_infile2_ae(trim_t *trim_ptr, size_t c, char new_infile2_element);
int trim_set_infile2_cpy(trim_t *trim_ptr, char *new_infile2, size_t array_size);
int trim_set_outfile2(trim_t *trim_ptr, char *new_outfile2);
int trim_set_outfile2_ae(trim_t *trim_ptr, size_t c, char new_outfile2_element);
int trim_set_outfile2_cpy(trim_t *trim_ptr, char *new_outfile2, size_t array_size);
int trim_set_adapter(trim_t *trim_ptr, char *new_adapter);
int trim_set_adapter_ae(trim_t *trim_ptr, size_t c, char new_adapter_element);
int trim_set_adapter_cpy(trim_t *trim_ptr, char *new_adapter, size_t array_size);
int trim_set_min_length(trim_t *trim_ptr, size_t new_min_length);
int trim_set_min_match(trim_t *trim_ptr, size_t new_min_match);
int trim_set_min_qual(trim_t *trim_ptr, unsigned new_min_qual);
int trim_set_verbose(trim_t *trim_ptr, _Bool new_verbose);
